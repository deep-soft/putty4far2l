# 2023-08-13 08:40
name: Build release VC

on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
  workflow_dispatch:

env:
  TAG_NAME: "putty4far2l"
  PRG_NAME: "putty4far2l"
  VERSION: "0.78"

jobs:
  build-msbuild:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        build: [ 
                 msbuild_cl_x64_release, 
                 msbuild_cl_x86_release, 
               ]
        include:
          - { build: msbuild_cl_x64_release,   compiler: msbuild_cl, arch: amd64,       platform_sln: x64,   platform_name: x64,   build_config: Release }
          - { build: msbuild_cl_x86_release,   compiler: msbuild_cl, arch: amd64_x86,   platform_sln: Win32, platform_name: x86,   build_config: Release }

    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v3

      - name: Get program version
        continue-on-error: false
        shell: bash
        run: |
          PROG_VERSION=${{ env.VERSION}}
          echo $PROG_VERSION
          # echo "VERSION=$PROG_VERSION" >> $GITHUB_ENV

      - name: Print program version
        continue-on-error: false
        shell: bash
        run: |
          echo "Print program version"
          echo ${{ env.VERSION }}

#       - name: Set MSVC environment
#         uses: deep-soft/msvc-dev-cmd@v1
#         with:
#           arch: ${{ matrix.arch }}
# 
#       - name: Build (cl)
#         working-directory: _build/vc
#         run: msbuild -m /property:Configuration=${{ matrix.build_config }} /property:Platform=${{ matrix.platform_sln }} all.sln

      - name: Build 
        continue-on-error: true
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cd ..

      - name: Create Zip Archive Release
        # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}
        continue-on-error: true
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip'
          directory: 'build'
          # directory: 'build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb changelog'
          path: '.'

#       - name: Upload zip
#         continue-on-error: true
#         uses: deep-soft/upload-artifact@main
#         with:
#           name: ${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_name }}.${{ env.VERSION }}.zip
#           path: build/${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip
#           #path: _build/vc/_output/product/${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip

#      - name: Upload folder
#        continue-on-error: true
#        uses: deep-soft/upload-artifact@main
#        with:
#          name: ${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_name }}
#          path: _build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}

      - name: Create list file
        continue-on-error: true
        shell: bash
        run: |
          list_file="${{ env.PRG_NAME }}.${{ matrix.build }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.platform_sln }}-${{ matrix.platform_name }}-${{ matrix.build_config }}.txt"
          ls -lR > $list_file
          echo "LIST_File=$list_file" >> GITHUB.ENV

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
          files: |
            # build/${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.VERSION }}.zip
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ${{ env.LIST_File }}
