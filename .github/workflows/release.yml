# 2023-10-19 14:50
# patch config.c, tunnels, listbox from 3 to 10 lines
name: Build release VC

on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
  workflow_dispatch:
    inputs:
      make_archive_all:
        description: Make Archive with all files from build dir
        type: boolean
        default: false

env:
  TAG_NAME: "putty4far2l"
  PRG_NAME: "putty4far2l"
  VERSION: "0.78.0.0"

jobs:
  build:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        build: [ 
                 cmake_x64_release, 
                 cmake_x86_release, 
               ]
        include:
          - { build: cmake_x64_release,   compiler: vc, arch: amd64,       platform_sln: x64,   platform_name: x64,   build_config: Release }
          - { build: cmake_x86_release,   compiler: vc, arch: amd64_x86,   platform_sln: Win32, platform_name: x86,   build_config: Release }

    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v3

      - name: Get program version
        continue-on-error: false
        shell: bash
        run: |
          # PROG_VERSION=${{ env.VERSION}}
          # PROG_VERSION=$(grep "RELEASE " version.h | awk '{print $3}')
          PROG_VERSION=$(grep "BINARY_VERSION " version.h | awk '{print $3}' | tr , .)
          echo $PROG_VERSION
          if [ $PROG_VERSION != '' ]; then
            echo "VERSION=$PROG_VERSION" >> $GITHUB_ENV
          fi

      - name: Print program version
        continue-on-error: false
        shell: bash
        run: |
          echo "Print program version"
          echo ${{ env.VERSION }}

      - name: Patch config.c, tunnels, listbox
        continue-on-error: false
        shell: bash
        run: |
          sed -b -ibak 's!pfd->listbox->listbox.height = 3;!pfd->listbox->listbox.height = 22;!' config.c
          sed -b -ibak 's!ssd->listbox->listbox.height = 7;!ssd->listbox->listbox.height = 20;!' config.c
          sed -b -ibak 's!pds, TREE_BASE, IDCX_STDBASE, 3, 3, 235!pds, TREE_BASE, IDCX_STDBASE, 3, 3, 335!' windows/dialog.c
          sed -b -ibak 's!r.bottom = r.top + 219;!r.bottom = r.top + 319;!' windows/dialog.c
          sed -b -ibak 's!IDD_MAINBOX DIALOG DISCARDABLE 0, 0, 300, 252!IDD_MAINBOX DIALOG DISCARDABLE 0, 0, 300, 352!' windows/putty-common.rc2
          grep "pfd->listbox->listbox.height = " config.c
          grep "ssd->listbox->listbox.height = " config.c
          grep "pds, TREE_BASE, IDCX_STDBASE, 3, 3," windows/dialog.c
          grep "r.bottom = r.top + " windows/dialog.c
          grep "IDD_MAINBOX DIALOG DISCARDABLE "  windows/putty-common.rc2

#       - name: Set MSVC environment
#         uses: deep-soft/msvc-dev-cmd@v1
#         with:
#           arch: ${{ matrix.arch }}
# 
#       - name: Build (cl)
#         working-directory: _build/vc
#         run: msbuild -m /property:Configuration=${{ matrix.build_config }} /property:Platform=${{ matrix.platform_sln }} all.sln

      - name: Build 
        continue-on-error: true
        shell: cmd
        run: |
          mkdir build
          cd build
          mkdir ${{ matrix.platform_name }}
          cd ${{ matrix.platform_name }}
          :: cmake ../.. -DCMAKE_BUILD_TYPE=${{ matrix.build_config }} -A ${{ matrix.platform_sln }}
          cmake ../.. -A ${{ matrix.platform_sln }}
          cmake --build . --config ${{ matrix.build_config }}
          cd ..
          cd ..

      - name: Create Zip Archive Release
        # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}
        continue-on-error: true
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_name }}.${{ env.VERSION }}.zip'
          directory: 'build/${{ matrix.platform_name }}/${{ matrix.build_config }}'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb changelog'
          path: 'p*.exe testcrypt.exe'

      - name: Upload zip
        continue-on-error: true
        uses: deep-soft/upload-artifact@main
        with:
          name: ${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_name }}.${{ env.VERSION }}.zip
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
          draft: true
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Create Zip Archive Release - All
        if: ${{ inputs.make_archive_all }}
        # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}
        continue-on-error: true
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_name }}.${{ env.VERSION }}-ALL.zip'
          directory: './'
          # directory: 'build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_name }}'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb changelog'
          path: '.'

      - name: Upload zip - All
        if: ${{ inputs.make_archive_all }}
        continue-on-error: true
        uses: deep-soft/upload-artifact@main
        with:
          name: ${{ env.PRG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_name }}.${{ env.VERSION }}.zip
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Create list file - All
        if: ${{ inputs.make_archive_all }}
        continue-on-error: true
        shell: bash
        run: |
          list_file="${{ env.PRG_NAME }}.${{ matrix.build }}-${{ matrix.compiler }}-${{ matrix.arch }}-${{ matrix.platform_name }}-${{ matrix.build_config }}.txt"
          ls -lR > $list_file
          echo "LIST_File=$list_file" >> $GITHUB_ENV

      - name: Publish - All
        if: ${{ inputs.make_archive_all }}
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}-ALL
          draft: true
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ${{ env.LIST_File }}
